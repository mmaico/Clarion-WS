
package br.com.kohen.eventmanager.clarion.ws.wsdl.balance;

import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Logger;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "WSCLSE5", targetNamespace = "http://189.2.170.19:81/", wsdlLocation = "http://189.2.170.19:81/ws/WSCLSE5.apw?WSDL")
public class WSCLSE5
    extends Service
{
	private final static Logger logger = Logger.getLogger(WSCLSE5 .class.getName());
    private final static URL WSCLSE5_WSDL_LOCATION;
    private final static WebServiceException WSCLSE5_EXCEPTION;
    private final static QName WSCLSE5_QNAME = new QName("http://189.2.170.19:81/", "WSCLSE5");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://189.2.170.19:81/ws/WSCLSE5.apw?WSDL");
        } catch (MalformedURLException ex) {
        	logger.warning("Failed to create URL for the wsdl Location: 'http://189.2.170.19:81/ws/WSCLSE5.apw?WSDL', retrying as a local file");
            logger.warning(ex.getMessage());
        }
        WSCLSE5_WSDL_LOCATION = url;
        WSCLSE5_EXCEPTION = e;
    }

    public WSCLSE5() {
        super(__getWsdlLocation(), WSCLSE5_QNAME);
    }

    public WSCLSE5(URL wsdlLocation) {
        super(wsdlLocation, WSCLSE5_QNAME);
    }

    public WSCLSE5(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    /**
     * 
     * @return
     *     returns WSCLSE5SOAP
     */
    @WebEndpoint(name = "WSCLSE5SOAP")
    public WSCLSE5SOAP getWSCLSE5SOAP() {
        return super.getPort(new QName("http://189.2.170.19:81/", "WSCLSE5SOAP"), WSCLSE5SOAP.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns WSCLSE5SOAP
     */
    @WebEndpoint(name = "WSCLSE5SOAP")
    public WSCLSE5SOAP getWSCLSE5SOAP(WebServiceFeature... features) {
        return super.getPort(new QName("http://189.2.170.19:81/", "WSCLSE5SOAP"), WSCLSE5SOAP.class, features);
    }

    private static URL __getWsdlLocation() {
        if (WSCLSE5_EXCEPTION!= null) {
            throw WSCLSE5_EXCEPTION;
        }
        return WSCLSE5_WSDL_LOCATION;
    }

}
